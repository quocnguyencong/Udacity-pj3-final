name: Azure Pipelines

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
trigger:
- main

# ToDo: Replace the agent pool name, if you are using Udacity Cloud lab. 
# Otherwise, comment out the line below. 
pool: myAgentPool

variables:
  python.version: '3.7.6'
  # ToDo: Replace the service connection name as used in the DevOps project settings
  azureServiceConnectionId: 'sc-final-project'
  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)
  # Environment name
  environmentName: 'staging-testing'

stages:
- stage: JMeter
  jobs:
  - job: JmetterTest
    steps:
    - task: CmdLine@2
      displayName: Install java
      inputs:
        script: |
          sudo apt-get install openjdk-11-jre-headless -y
          sudo apt-get install openjdk-11-jdk -y

    - task: CmdLine@2
      displayName: Install JMeter
      inputs:
        script: |
          wget https://dlcdn.apache.org//jmeter/binaries/apache-jmeter-5.5.tgz
          tar zxvf apache-jmeter-5.5.tgz
          mkdir -p jmeter_log/StressHTMLreport
          mkdir -p jmeter_log/EnduranceHTMLreport
    - task: CmdLine@2
      displayName: Run JMeter Stress test
      inputs:
        script: "apache-jmeter-5.5/bin/jmeter -n -t automatedtesting/jmeter/test-suite/StressTestSuite.jmx -l jmeter_log/StressTestResult.csv -e -f -o jmeter_log/StressHTMLreport -j jmeter_log/StressTest.log"
    
    - task: CmdLine@2
      displayName: Run JMeter Endurance test
      inputs:
        script: "apache-jmeter-5.5/bin/jmeter -n -t automatedtesting/jmeter/test-suite/EnduranceTestSuite.jmx -l jmeter_log/EnduranceTestResult.csv -e -f -o jmeter_log/EnduranceHTMLreport -j jmeter_log/EnduranceTest.log"

    - task: ArchiveFiles@2
      displayName: Archive JMeter Stress test HTML report
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/jmeter_log/StressHTMLreport'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(System.DefaultWorkingDirectory)/jmeter_log/StressHTMLreport-$(Build.BuildId).zip'
        verbose: true

    - task: ArchiveFiles@2
      displayName: Archive JMeter Endurance test HTML report
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/jmeter_log/EnduranceHTMLreport'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(System.DefaultWorkingDirectory)/jmeter_log/EnduranceHTMLreport-$(Build.BuildId).zip'
        verbose: true

    - task: CmdLine@2
      displayName: Remove HTML log folder
      inputs:
        script: "rm -rf jmeter_log/StressHTMLreport, rm -rf jmeter_log/EnduranceHTMLreport"

    - task: PublishPipelineArtifact@1
      displayName: Publish JMeter logs file
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/jmeter_log'
        artifactName: 'drop-jmeter-logs'


